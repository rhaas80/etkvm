#!/bin/bash
set -e
RELEASE=$1
if [ ! -f install_$RELEASE ] ; then
  echo "You need to specify a release and the file install_\$RELEASE needs to be present.";
  exit 1
fi

#DIST=wheezy
#URL=http://cdimage.debian.org/mirror/cdimage/archive/7.8.0/amd64/iso-cd/debian-7.8.0-amd64-netinst.iso

#DIST=jessie
#URL=http://cdimage.debian.org/debian-cd/8.7.1/i386/iso-cd/debian-8.7.1-i386-netinst.iso

DIST=stretch
URL=https://cdimage.debian.org/debian-cd/current/i386/iso-cd/debian-9.0.0-i386-netinst.iso

#DIST=trusty
#URL=http://archive.ubuntu.com/ubuntu/dists/trusty-updates/main/installer-amd64/current/images/netboot/mini.iso

CD_DST=${DIST}_$RELEASE
rm -rf $CD_DST
mkdir $CD_DST
wget -cN $URL
bsdtar -C $CD_DST -xf `basename $URL`
chmod -R +w $CD_DST

if [ -d $CD_DST/isolinux ]; then
  ISOLINUX=isolinux/
fi
cd $CD_DST

# debian stretch defaults to a gfx based install
perl -pi -e 's/initrd\.gz/initrd\.gz auto-install\/enable=true debconf\/priority=critical preseed\/file=\/cdrom\/preseed.cfg/'  ${ISOLINUX}txt.cfg
perl -pi -e 's/initrd\.gz/initrd\.gz auto-install\/enable=true debconf\/priority=critical preseed\/file=\/cdrom\/preseed.cfg/'  ${ISOLINUX}gtk.cfg
perl -pi -e 's/timeout 0/timeout 1/' ${ISOLINUX}isolinux.cfg
cp ../preseed.cfg ../late_command.sh ../postseed .

cp ../data/*.tar ./
md5sum `find ! -name "md5sum.txt" ! -path "./isolinux/*" -follow -type f` > md5sum.txt

# Ubuntu's mini.iso does not mount the iso image itself during installation, so we have to
# copy stuff directly into the initrd
if [ `basename "$URL"` == "mini.iso" ]; then
  mkdir new_initrd
  cd new_initrd
  # copy stuff over - Ubuntu seems to ignore the given location of preseed.cfg and always
  # expects it in the root of the initrd. Also strip mirror information from the file to
  # remove the debian-specific mirror
  zcat ../initrd.gz | fakeroot bash -c 'cpio --extract; mkdir cdrom; cp -r ../postseed ../et_misc cdrom/; grep -v mirror ../preseed.cfg > preseed.cfg; find . | cpio -o -H newc | gzip > ../initrd.gz'
  cd ..
  rm -rf new_initrd
fi

cd ..
genisoimage -o ${DIST}_$RELEASE.iso -r -J -no-emul-boot -boot-load-size 4 -boot-info-table -b ${ISOLINUX}isolinux.bin -c ${ISOLINUX}boot.cat $CD_DST
rm -rf $CD_DST

VMNAME=${DIST}_$RELEASE

VBoxManage unregistervm $VMNAME --delete || true
VBoxManage createvm --name $VMNAME --register

# standard settings
VBoxManage modifyvm      $VMNAME --ostype Debian --acpi on --biosbootmenu disabled --rtcuseutc on

### minimal system
VBoxManage modifyvm      $VMNAME --memory 1024 --cpus 1 --vram 32

### workstation class
#VBoxManage modifyvm      $VMNAME --memory 4096 --cpus 8 --ioapic on --vram 64 --usb on

# rest of standard settings
VBoxManage storagectl    $VMNAME --name "IDE Controller" --add ide --controller PIIX4
VBoxManage storagectl    $VMNAME --name "SATA Controller" --add sata --controller IntelAhci
VBoxManage storageattach $VMNAME --storagectl "IDE Controller" --port 0 --device 0 --type dvddrive --medium `pwd`/$VMNAME.iso
# we limit the partition to 8GB initially and offer the user the option to
# increase it to the full size
VBoxManage createhd --filename $VMNAME.vdi --size 32768
VBoxManage storageattach $VMNAME --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium $VMNAME.vdi --discard on
VBoxManage modifyvm      $VMNAME --nic1 nat --nictype1 virtio --cableconnected1 on
VBoxManage modifyvm      $VMNAME --natpf1 "ssh,tcp,127.0.0.1,2222,,22"
# this does likely not work since it is a privileged port and Windows cannot connect to any other
VBoxManage modifyvm      $VMNAME --natpf2 "smb,tcp,127.0.0.1,415,,415"
# use for SMB share inside of VM
# cannot be used since ti aborts unless the users does something else first
# VBoxManage modifyvm      $VMNAME --nic2 hostonly --nictype2 virtio --cableconnected2 on --hostonlyadapter2 vboxnet0
VBoxManage modifyvm      $VMNAME --audio alsa
VBoxManage modifyvm      $VMNAME --clipboard bidirectional
VBoxManage modifyvm      $VMNAME --boot1 disk --boot2 dvd --boot3 net --boot4 none
VBoxManage startvm       $VMNAME

VBoxManage modifyhd --compact $VMNAME.vdi
rm -f $VMNAME.ova
VBoxManage export $VMNAME --output $VMNAME.ova
